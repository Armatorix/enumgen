// DO NOT EDIT: auto generated from github.com/Armatorix/enumgen

package {{ .PackageName }}

func (e {{ .EnumName }}) String() string {
    switch e {
    {{ range .Values }}case {{ . }}:
        return "{{ . }}"
    {{ end }}default:
        return "Unknown"
    }
}

func (e {{ .EnumName }}) MarshalJSON() ([]byte, error) {
    return json.Marshal(e.String())
}

func (e *{{ .EnumName }}) UnmarshalJSON(data []byte) error {
    var s string
    if err := json.Unmarshal(data, &s); err != nil {
        return err
    }
    switch s {
    {{ range .Values }}case "{{ . }}":
        *e = {{ . }}
    {{ end }}default:
        return fmt.Errorf("Unknown {{ .EnumName }} value: %+v", s)
    }
    return nil
}

func {{ .EnumName}}Values() []{{ .EnumName }} {
    return []{{ .EnumName }}{
    {{ range .Values }}{{ . }},
    {{ end }}
    }
}

func (e {{ .EnumName }}) IsValid() bool {
    switch e {
    {{ range .Values }}case {{ . }}:
        return true
    {{ end }}default:
        return false
    }
}
